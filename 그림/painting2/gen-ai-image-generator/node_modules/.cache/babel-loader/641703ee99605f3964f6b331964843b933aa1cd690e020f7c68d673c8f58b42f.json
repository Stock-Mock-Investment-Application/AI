{"ast":null,"code":"import axios from \"axios\";\nimport { secret } from \"../secret\";\nconst {\n  apiKey\n} = secret;\nexport const fetchImages = async (promptCall, seedValue, dropDownValue, radioValue) => {\n  const options = {\n    method: \"POST\",\n    url: \"https://api.segmind.com/v1/sdxl1.0-txt2img\",\n    headers: {\n      \"x-api-key\": `${apiKey}`,\n      \"Content-Type\": \"application/json\"\n    },\n    responseType: \"arraybuffer\",\n    data: {\n      prompt: promptCall,\n      seed: seedValue,\n      scheduler: dropDownValue,\n      num_inference_steps: radioValue,\n      negative_prompt: \"NONE\",\n      samples: \"1\",\n      guidance_scale: \"7.5\",\n      strength: \"1\",\n      shape: 512\n    }\n  };\n  try {\n    const response = await axios.request(options);\n    // convert raw blob as ArrayBuffer to an image blob with MIME type\n    const imageBlob = new Blob([response.data], {\n      type: \"image/jpeg\"\n    });\n    // console.log(response, imageBlob);\n    return imageBlob;\n  } catch (error) {\n    console.error(\"Error while fecthing Gen AI model API\", error);\n  }\n};","map":{"version":3,"names":["axios","secret","apiKey","fetchImages","promptCall","seedValue","dropDownValue","radioValue","options","method","url","headers","responseType","data","prompt","seed","scheduler","num_inference_steps","negative_prompt","samples","guidance_scale","strength","shape","response","request","imageBlob","Blob","type","error","console"],"sources":["C:/Users/SSAFY/Desktop/0716/AI/그림/painting2/gen-ai-image-generator/src/services/model-api.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { secret } from \"../secret\";\r\n\r\nconst { apiKey } = secret;\r\n\r\nexport const fetchImages = async (\r\n  promptCall,\r\n  seedValue,\r\n  dropDownValue,\r\n  radioValue\r\n) => {\r\n  const options = {\r\n    method: \"POST\",\r\n    url: \"https://api.segmind.com/v1/sdxl1.0-txt2img\",\r\n    headers: {\r\n      \"x-api-key\": `${apiKey}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    responseType: \"arraybuffer\",\r\n    data: {\r\n      prompt: promptCall,\r\n      seed: seedValue,\r\n      scheduler: dropDownValue,\r\n      num_inference_steps: radioValue,\r\n      negative_prompt: \"NONE\",\r\n      samples: \"1\",\r\n      guidance_scale: \"7.5\",\r\n      strength: \"1\",\r\n      shape: 512,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await axios.request(options);\r\n    // convert raw blob as ArrayBuffer to an image blob with MIME type\r\n    const imageBlob = new Blob([response.data], { type: \"image/jpeg\" });\r\n    // console.log(response, imageBlob);\r\n    return imageBlob;\r\n  } catch (error) {\r\n    console.error(\"Error while fecthing Gen AI model API\", error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAElC,MAAM;EAAEC;AAAO,CAAC,GAAGD,MAAM;AAEzB,OAAO,MAAME,WAAW,GAAG,MAAAA,CACzBC,UAAU,EACVC,SAAS,EACTC,aAAa,EACbC,UAAU,KACP;EACH,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,GAAG,EAAE,4CAA4C;IACjDC,OAAO,EAAE;MACP,WAAW,EAAG,GAAET,MAAO,EAAC;MACxB,cAAc,EAAE;IAClB,CAAC;IACDU,YAAY,EAAE,aAAa;IAC3BC,IAAI,EAAE;MACJC,MAAM,EAAEV,UAAU;MAClBW,IAAI,EAAEV,SAAS;MACfW,SAAS,EAAEV,aAAa;MACxBW,mBAAmB,EAAEV,UAAU;MAC/BW,eAAe,EAAE,MAAM;MACvBC,OAAO,EAAE,GAAG;MACZC,cAAc,EAAE,KAAK;MACrBC,QAAQ,EAAE,GAAG;MACbC,KAAK,EAAE;IACT;EACF,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,OAAO,CAAChB,OAAO,CAAC;IAC7C;IACA,MAAMiB,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACH,QAAQ,CAACV,IAAI,CAAC,EAAE;MAAEc,IAAI,EAAE;IAAa,CAAC,CAAC;IACnE;IACA,OAAOF,SAAS;EAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;EAC/D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}